name: HQS CI tests for rust pyo3 repos

on:
  workflow_dispatch:
  pull_request:
    branches: [main]

jobs:
  linting:
    uses: HQSquantumsimulations/reusable_workflows/.github/workflows/reusable_linting_rust_pyo3.yml@main

  unittests_check_windows:
    name: unittests-windows-${{ matrix.python.interpreter }}
    runs-on: "windows-latest"
    strategy:
      matrix:
        python: [
            # { py: "3.8", interpreter: "python3.8" },
            { py: "3.9", interpreter: "python3.9" },
            { py: "3.10", interpreter: "python3.10" },
            { py: "3.11", interpreter: "python3.11" },
            # {py: '3.12', interpreter: "python3.12"},
          ]
    steps:
      - uses: actions/checkout@v3
      # - uses: Swatinem/rust-cache@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python.py }}
      - run: |
          python -m pip install numpy
          cargo test --workspace --no-default-features --locked

  unittests_check_windows_py312:
    if: ${{ inputs.windows && inputs.python_3_12 }}
    name: unittests-windows-python3.12
    runs-on: "windows-latest"
    steps:
      - uses: actions/checkout@v3
      # - uses: Swatinem/rust-cache@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - run: |
          python -m pip install numpy
          cargo test --workspace --no-default-features --locked

  unittests_check_macos:
    if: ${{ inputs.macos }}
    name: unittests-macos-${{ matrix.python.interpreter }}
    runs-on: "macOS-13"
    strategy:
      matrix:
        python: [
            # { py: "3.8", interpreter: "python3.8" },
            { py: "3.9", interpreter: "python3.9" },
            { py: "3.10", interpreter: "python3.10" },
            { py: "3.11", interpreter: "python3.11" },
            # {py: '3.12', interpreter: "python3.12"},
          ]
    steps:
      - uses: actions/checkout@v3
      # - uses: Swatinem/rust-cache@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python.py }}
      - run: |
          python -m pip install numpy
          cargo test --workspace --no-default-features --locked

  unittests_check_macos_py312:
    if: ${{ inputs.macos && inputs.python_3_12 }}
    name: unittests-macos-python3.12
    runs-on: "macOS-13"
    steps:
      - uses: actions/checkout@v3
      # - uses: Swatinem/rust-cache@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - run: |
          python -m pip install numpy
          cargo test --workspace --no-default-features --locked

  unittests_check_linux:
    name: unittests-linux-${{ matrix.python.interpreter }}
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python: [
            # { py: "3.8", interpreter: "python3.8" },
            { py: "3.9", interpreter: "python3.9" },
            { py: "3.10", interpreter: "python3.10" },
            { py: "3.11", interpreter: "python3.11" },
            # {py: '3.12', interpreter: "python3.12"},
          ]
    steps:
      - uses: actions/checkout@v3
      # - uses: Swatinem/rust-cache@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true
          components: rustfmt
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python.py }}
      - run: |
          python -m pip install numpy
          cargo test --workspace --no-default-features --locked
          cargo fmt --all -- --check

  unittests_check_linux_py312:
    name: unittests-linux-python3.12
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v3
      # - uses: Swatinem/rust-cache@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true
          components: rustfmt
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - run: |
          python -m pip install numpy
          cargo test --workspace --no-default-features --locked
          cargo fmt --all -- --check

  doctest_check:
    name: unittests_check-ubuntu-latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # - uses: Swatinem/rust-cache@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          default: true
      - run: |
          cargo test --doc --package=roqoqo-qasm

  code_coverage_roqoqo:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # - uses: Swatinem/rust-cache@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: llvm-tools-preview
          override: true
      - uses: taiki-e/install-action@cargo-llvm-cov
      - run: |
          cd roqoqo-qasm
          cargo llvm-cov --no-default-features --lcov --output-path lcov_roqoqo.info --fail-under-lines=90

  test_maturin_builds_linux:
    name: maturin_check_linux-${{ matrix.python.interpreter }}
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python: [
            # { py: "3.8", interpreter: "python3.8" },
            { py: "3.9", interpreter: "python3.9" },
            { py: "3.10", interpreter: "python3.10" },
            { py: "3.11", interpreter: "python3.11" },
            # {py: '3.12', interpreter: "python3.12"},
          ]
    steps:
      - uses: actions/checkout@v3
      # - uses: Swatinem/rust-cache@v2.0.0
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python.py }}
      - name: Install dependencies
        run: |
          pip install maturin pytest numpy
          pip install qoqo_qasm/
      - name: test
        run: |
          pytest qoqo_qasm/python_tests

  test_maturin_builds_linux_py312:
    name: maturin_check_linux-python3.12
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v3
      # - uses: Swatinem/rust-cache@v2.0.0
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          pip install maturin pytest numpy setuptools
          pip install qoqo_qasm/
      - name: test
        run: |
          pytest qoqo_qasm/python_tests

  test_maturin_builds_windows:
    name: maturin_check_windows-${{ matrix.python.interpreter }}
    runs-on: "windows-latest"
    strategy:
      matrix:
        python: [
            # { py: "3.8", interpreter: "python3.8" },
            { py: "3.9", interpreter: "python3.9" },
            { py: "3.10", interpreter: "python3.10" },
            { py: "3.11", interpreter: "python3.11" },
            # {py: '3.12', interpreter: "python3.12"},
          ]
    steps:
      - uses: actions/checkout@v3
      # - uses: Swatinem/rust-cache@v2.0.0
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true
      - uses: actions/setup-python@v4
        with:
          python-version: "${{ matrix.python.py }}"
      - name: Install dependencies
        run: |
          pip install maturin pytest numpy
          pip install qoqo_qasm/
      - name: test
        run: |
          pytest qoqo_qasm/python_tests

  test_maturin_builds_windows_py312:
    name: maturin_check_windows-python3.12
    runs-on: "windows-latest"
    steps:
      - uses: actions/checkout@v3
      # - uses: Swatinem/rust-cache@v2.0.0
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          pip install maturin pytest numpy setuptools
          pip install qoqo_qasm/
      - name: test
        run: |
          pytest qoqo_qasm/python_tests
