name: ci_tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test_pyproject_install:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3.1.0
    - uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        default: true
    - name: Install dependencies
      run: |
        pip install maturin pytest numpy qoqo qiskit-terra
        pip install ./qoqo_qasm
    - name: test
      run: |
        pytest ./qoqo_qasm/tests
  clippy_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
      - run: cargo clippy -- -D warnings

  unittests_check:
    name: unittests_check-${{ matrix.combinations.runs_on }}
    runs-on: ${{ matrix.combinations.runs_on }}
    strategy:
      matrix:
        combinations: [
          { runs_on: "macOS-latest", rust: "x86_64-apple-darwin" },
          { runs_on: "ubuntu-latest",  rust: "x86_64-unknown-linux-gnu" },
          { runs_on: "windows-latest", rust: "x86_64-pc-windows-msvc" },
        ]
        python: [
            {py: '3.7', interpreter: "python3.7"},
            {py: '3.8', interpreter: "python3.8"},
            {py: '3.9', interpreter: "python3.9"},
            {py: '3.10', interpreter: "python3.10"}
        ]
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.combinations.rust }}
          default: true
          components: rustfmt
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python.py }}
      - run: |
          python -m pip install numpy
          cargo test --workspace --no-default-features
          cargo fmt --all -- --check
  
  format_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
      - run: cargo fmt --all -- --check


  check_linting_and_tests:
    name: unittests_check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [
            {py: '3.7', interpreter: "python3.7"},
            {py: '3.8', interpreter: "python3.8"},
            {py: '3.9', interpreter: "python3.9"},
            {py: '3.10', interpreter: "python3.10"}
        ]
    steps:
      - uses: actions/checkout@v3.1.0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python.py }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest pytest-cov flake8 flake8-bugbear flake8-docstrings flake8-annotations darglint mypy qoqo
      - name: Test with pytest
        run: |
          pip install pytest
          pip install -r ./qoqo_qasm/tests/requirements.txt
          pip install -e ./qoqo_qasm/
          pytest --cov=qoqo_qasm --cov-fail-under=80
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 --config=./qoqo_qasm/.flake8 ./qoqo_qasm/qoqo_qasm --count
      - name: Mypy check
        run: |
          # stop the build if there are Python syntax errors or undefined names
          mypy --config-file=./qoqo_qasm/.mypy.ini ./qoqo_qasm/qoqo_qasm